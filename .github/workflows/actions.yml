name: Java CI with Gradle and Docker

on:
  push:
    branches: [ "feature/docker-deployment" ]
  pull_request:
    branches: [ "feature/docker-deployment" ]

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: 680989793215
  #IMAGE_NAME: plazoleta
  EB_APPLICATION_NAME: plazoleta-app
  EB_ENVIRONMENT_NAME: Plazoleta-app-env

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build --no-daemon

      - name: Run tests and generate coverage report
        run: ./gradlew test jacocoTestReport sonar --no-daemon

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          region: ${{ env.AWS_REGION }}

      - name: Build and tag Docker image
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME

      - name: Push Docker image to ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION_NAME }} --version-label ${{ github.sha }} --source-bundle S3Bucket=elasticbeanstalk-us-east-1-${{ env.AWS_ACCOUNT_ID }},S3Key=1687382143359-Dockerrun.aws.json
          aws elasticbeanstalk update-environment --application-name ${{ env.EB_APPLICATION_NAME }} --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label ${{ github.sha }}

  send_notification:
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send error notification
        uses: google-github-actions/chat@master
        with:
          webhook-url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          message: |
            Pipeline failed in repository ${{ github.repository }}:
            Workflow: ${{ github.workflow }}
            Run ID: ${{ github.run_id }}
            Run URL: ${{ github.event.workflow_run.url }}